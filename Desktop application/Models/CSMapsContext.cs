// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace CSMaps.Models;

public partial class CSMapsContext : DbContext
{
    public CSMapsContext(DbContextOptions<CSMapsContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Entidad> Entidades { get; set; }

    public virtual DbSet<Establecimiento> Establecimientos { get; set; }

    public virtual DbSet<EventoTipo> EventoTipos { get; set; }

    public virtual DbSet<Grupo> Grupos { get; set; }

    public virtual DbSet<GrupoPunto> GrupoPuntos { get; set; }

    public virtual DbSet<Punto> Puntos { get; set; }

    public virtual DbSet<PuntoDato> PuntoDatos { get; set; }

    public virtual DbSet<PuntoEvento> PuntoEventos { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Entidad>(entity =>
        {
            entity.HasKey(e => e.IdEntidad);

            entity.ToTable("Entidad");

            entity.HasIndex(e => e.Nombre, "UI_Entidad_Nombre").IsUnique();

            entity.Property(e => e.IdEntidad).ValueGeneratedNever();
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.NombreTemp)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.TelefonoMovil)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.UltimaActualizacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
        });

        modelBuilder.Entity<Establecimiento>(entity =>
        {
            entity.HasKey(e => e.IdEstablecimiento);

            entity.ToTable("Establecimiento");

            entity.Property(e => e.IdEstablecimiento).ValueGeneratedNever();
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.NombreTemp)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.TelefonoMovil)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.UltimaActualizacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");

            entity.HasOne(d => d.IdEntidadNavigation).WithMany(p => p.Establecimientos)
                .HasForeignKey(d => d.IdEntidad)
                .HasConstraintName("FK_Establecimiento_Entidad");
        });

        modelBuilder.Entity<EventoTipo>(entity =>
        {
            entity.HasKey(e => e.IdEventoTipo);

            entity.ToTable("EventoTipo");

            entity.HasIndex(e => e.Nombre, "UI_EventoTipo_Nombre").IsUnique();

            entity.Property(e => e.Activo).HasDefaultValue(true);
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.UltimaActualizacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
        });

        modelBuilder.Entity<Grupo>(entity =>
        {
            entity.HasKey(e => e.IdGrupo);

            entity.ToTable("Grupo");

            entity.HasIndex(e => e.Nombre, "UI_Grupo_Nombre").IsUnique();

            entity.Property(e => e.IdGrupo).ValueGeneratedNever();
            entity.Property(e => e.Activo).HasDefaultValue(true);
            entity.Property(e => e.GoogleMapsIcon).HasColumnType("image");
            entity.Property(e => e.GoogleMapsStyleId)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.UltimaActualizacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
        });

        modelBuilder.Entity<GrupoPunto>(entity =>
        {
            entity.HasKey(e => new { e.IdGrupo, e.IdPunto });

            entity.ToTable("GrupoPunto");

            entity.Property(e => e.UltimaActualizacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");

            entity.HasOne(d => d.IdGrupoNavigation).WithMany(p => p.GrupoPuntos)
                .HasForeignKey(d => d.IdGrupo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_GrupoPunto_Grupo");

            entity.HasOne(d => d.IdPuntoNavigation).WithMany(p => p.GrupoPuntos)
                .HasForeignKey(d => d.IdPunto)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_GrupoPunto_Punto");
        });

        modelBuilder.Entity<Punto>(entity =>
        {
            entity.HasKey(e => e.IdPunto);

            entity.ToTable("Punto");

            entity.HasIndex(e => e.Nombre, "UI_Punto_Nombre").IsUnique();

            entity.Property(e => e.IdPunto).ValueGeneratedNever();
            entity.Property(e => e.Altitud).HasColumnType("decimal(6, 2)");
            entity.Property(e => e.Latitud).HasColumnType("decimal(8, 6)");
            entity.Property(e => e.Longitud).HasColumnType("decimal(9, 6)");
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.UltimaActualizacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
        });

        modelBuilder.Entity<PuntoDato>(entity =>
        {
            entity.HasKey(e => e.IdPunto);

            entity.ToTable("PuntoDato");

            entity.HasIndex(e => e.ChapaNumero, "UI_PuntoDato_ChapaNumero")
                .IsUnique()
                .HasFilter("([ChapaNumero] IS NOT NULL)");

            entity.Property(e => e.IdPunto).ValueGeneratedNever();
            entity.Property(e => e.UltimaActualizacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");

            entity.HasOne(d => d.IdEstablecimientoNavigation).WithMany(p => p.PuntoDatos)
                .HasForeignKey(d => d.IdEstablecimiento)
                .HasConstraintName("FK_PuntoDato_Establecimiento");

            entity.HasOne(d => d.IdPuntoNavigation).WithOne(p => p.PuntoDato)
                .HasForeignKey<PuntoDato>(d => d.IdPunto)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PuntoDato_Punto");
        });

        modelBuilder.Entity<PuntoEvento>(entity =>
        {
            entity.HasKey(e => new { e.IdPunto, e.IdEvento });

            entity.ToTable("PuntoEvento");

            entity.Property(e => e.FechaHora).HasColumnType("smalldatetime");
            entity.Property(e => e.UltimaActualizacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");

            entity.HasOne(d => d.IdEventoTipoNavigation).WithMany(p => p.PuntoEventos)
                .HasForeignKey(d => d.IdEventoTipo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PuntoEvento_EventoTipo");

            entity.HasOne(d => d.IdPuntoNavigation).WithMany(p => p.PuntoEventos)
                .HasForeignKey(d => d.IdPunto)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PuntoEvento_Punto");
        });

        OnModelCreatingGeneratedProcedures(modelBuilder);
        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}